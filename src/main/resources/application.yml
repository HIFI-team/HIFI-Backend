server:
  port: ${PORT:8000}

spring:
  # .env import
  config:
    import: optional:file:.env[.properties]
  # Using POSTGRESQL
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver

  security:
    oauth2.client:
      registration:
        kakao:
          client-id: ${KAKAO_RESTAPI_KEY}
          redirect-uri: ${KAKAO_REDIRECT_URI}
          authorization-grant-type: authorization_code
          client-authentication-method: POST
          client-name: Kakao
          scope:
            - profile_nickname
            - account_email
      provider:
        kakao:
          authorization-uri: https://kauth.kakao.com/oauth/authorize
          token-uri: https://kauth.kakao.com/oauth/token
          user-info-uri: https://kapi.kakao.com/v2/user/me
          user-name-attribute: id

  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
#        show_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
#        format_sql: true
        database-platform: org.hibernate.dialect.PostgreSQLDialect

  thymeleaf:
    cache: false
    prefix: classpath:/templates/
    suffix: .html

  springfox:
    documentation:
      swagger:
        use-model-v3: false

logging.level:
    org.hibernate.SQL: debug
    org.hibernate.type: trace
